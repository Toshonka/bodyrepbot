import telebot
from telebot import types

bot = telebot.TeleBot("1814312326:AAHGhtyj8WD9tYKe9F8h9tJyQwpLWyUbpt0")
global mas
mas = []


@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    stic = open('sticker1.webp', 'rb')
    bot.send_sticker(message.chat.id, stic)
    bot.send_message(message.chat.id,
                     '–ù—É –ø—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>. ' \
                     '–° –º–æ–µ–π –ø–æ–º–æ—â—å—é –í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ç–∏–ø —Å–≤–æ–µ–≥–æ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–≤–æ–µ–≥–æ —Ç–µ–ª–∞.'.format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)
    bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_Age)


def get_Age(message):
    global Age
    Age = message.text
    if is_digit(Age) is True and Age[0] is not '-':
        mas.append(float(Age))
        bot.send_message(message.from_user.id, '–í–∞—à —Ä–æ—Å—Ç –≤ —Å–º?')
        bot.register_next_step_handler(message, get_Height)
    else:
        wrong(message)
        bot.register_next_step_handler(message, get_Age)


def get_Height(message):
    global Height
    Height = message.text
    if is_digit(Height) is True and Height[0] is not '-':
        mas.append(float(Height))
        bot.send_message(message.from_user.id, '–í–∞—à –≤–µ—Å –≤ –∫–≥?')
        bot.register_next_step_handler(message, get_Weight)
    else:
        wrong(message)
        bot.register_next_step_handler(message, get_Height)


def get_Weight(message):
    global Weight
    Weight = message.text
    if is_digit(Weight) is True and Weight[0] is not '-':
        mas.append(float(Weight))
        bot.send_message(message.from_user.id, '–í–∞—à –æ–±—Ö–≤–∞—Ç –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏ –≤ —Å–º?')
        bot.register_next_step_handler(message, get_Girth)
    else:
        wrong(message)
        bot.register_next_step_handler(message, get_Weight)


def get_Girth(message):
    global Girth
    Girth = message.text
    if is_digit(Girth) is True and Girth[0] is not '-':
        mas.append(float(Girth))
        bot.send_message(message.from_user.id, 'üí™ –í–∞—à–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É –ü–∏–Ω—å–µ:\n')
        bot.send_message(message.from_user.id, ans_Pin(mas[1], mas[2], mas[3]))
        bot.send_message(message.from_user.id, 'üí™ –í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –∏–Ω–¥–µ–∫—Å—É –ö–µ—Ç–ª–µ:\n')
        bot.send_message(message.from_user.id, ans_Ket(mas[1], mas[2]))
        goodbye(message)
    else:
        wrong(message)
        bot.register_next_step_handler(message, get_Girth)


def wrong(message):
    bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∏–ª–∏ –¥—Ä–æ–±–Ω–æ–µ —á–∏—Å–ª–æ!\n\n –ù–∞–ø—Ä–∏–º–µ—Ä "23" –∏–ª–∏ "181.5"')
    stic = open('angry.webp', 'rb')
    bot.send_sticker(message.chat.id, stic)


def is_digit(string):
    if string.isdigit():
        return True
    else:
        try:
            float(string)
            return True
        except ValueError:
            return False


def ans_Pin(a, b, c):
    res = a - (b + c)
    if res < 10:
        return '–í—ã - —ç–Ω–¥–æ–º–æ—Ä—Ñ.\n\n –ò–º–µ–µ—Ç–µ –≥–∏–ø–µ—Ä—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ. \n\n –í–æ–∑–º–æ–∂–µ–Ω –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å.'
    elif 10 <= res < 30:
        return '–í—ã - –º–µ–∑–æ–º–æ—Ä—Ñ.\n\n –ò–º–µ–µ—Ç–µ –Ω–æ—Ä–º–æ—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ.\n\n –¢–∞–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º.'
    elif res > 30:
        return '–í—ã - —ç–∫—Ç–æ–º–æ—Ä—Ñ.\n\n –ò–º–µ–µ—Ç–µ –≥–∏–ø–æ—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ. \n\n –í–æ–∑–º–æ–∂–Ω–∞ —Ö—É–¥–æ—â–∞–≤–æ—Å—Ç—å.'


def ans_Ket(a, b):
    res = b / ((a / 100) ** 2)
    if res < 18.5:
        return '–£ –í–∞—Å –¥–µ—Ñ–∏—Ü–∏—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞!\n\n –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ –æ–∂–∏—Ä–µ–Ω–∏—è, ' \
               '–∑–∞—Ç–æ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –í—ã –ª–µ–≥–∫–∞—è –º–∏—à–µ–Ω—å!\n\n –ñ–µ–ª–∞—Ç–∏–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.'
    elif 18.5 <= res < 24.9:
        return '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —É –í–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞!' \
               '\n\n –¢–∞–∫–∂–µ –í—ã –Ω–µ –≤—Ö–æ–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –ª—é–¥–µ–π —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º —Ä–∏—Å–∫–æ–º –æ–∂–∏—Ä–µ–Ω–∏—è.'
    elif 24.9 <= res < 29.9:
        return '–£ –í–∞—Å –∏–∑–±—ã—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞!\n\n –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ –æ–∂–∏—Ä–µ–Ω–∏—è. ' \
               '\n\n –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –¥–∏–µ—Ç–æ–ª–æ–≥–æ–º.'
    elif 29.9 <= res < 34.9:
        return '–£ –í–∞—Å –æ–∂–∏—Ä–µ–Ω–∏–µ 1 —Å—Ç–µ–ø–µ–Ω–∏!\n\n –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–∂–∏—Ä–µ–Ω–∏—è ' \
               '–∏ –¥—Ä—É–≥–∏—Ö —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π. \n\n –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –¥–∏–µ—Ç–æ–ª–æ–≥–æ–º.'
    elif 34.9 <= res < 40:
        return '–£ –í–∞—Å –æ–∂–∏—Ä–µ–Ω–∏–µ 2 —Å—Ç–µ–ø–µ–Ω–∏!\n\n –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–∂–∏—Ä–µ–Ω–∏—è ' \
               '–∏ –¥—Ä—É–≥–∏—Ö —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π. \n\n –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –¥–∏–µ—Ç–æ–ª–æ–≥–æ–º.'
    elif res >= 40:
        return '–£ –í–∞—Å –æ–∂–∏—Ä–µ–Ω–∏–µ 3 —Å—Ç–µ–ø–µ–Ω–∏!\n\n –ß—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–∂–∏—Ä–µ–Ω–∏—è ' \
               '–∏ –¥—Ä—É–≥–∏—Ö —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π. \n\n –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –¥–∏–µ—Ç–æ–ª–æ–≥–æ–º.'


def goodbye(msg):
    mas.clear()
    bot.send_message(msg.from_user.id,
                     '–ù–∞–¥–µ—é—Å—å –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω! \n\n –¢–∞–∫–∂–µ –µ—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —è —á—Ç–æ-—Ç–æ –≤—ã–≤–æ–∂—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–µ–Ω—è‚ù§Ô∏è'
                     '\n\n –ï—Å–ª–∏ —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–ª—é—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ /start')
    stic = open('bye.webp', 'rb')
    bot.send_sticker(msg.chat.id, stic)


bot.polling()